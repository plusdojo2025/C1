<!-- 
データベース　c1

ログイン、新規登録
users テーブル
CREATE TABLE users (				
    user_id INT AUTO_INCREMENT PRIMARY KEY,				
    login_id VARCHAR(100) NOT NULL UNIQUE,				
    password_hash VARCHAR(128) NOT NULL				
);				

INSERT INTO users VALUES
(2, 'tanaka0219',
'818b5ba3c4446375a3d7b1aeb57ef6f9095c72537bce58cf258575039dfec381a188950206aa4e3b28fc5eeba9d36378accbddee7cb36a17f8552fff259430e0');


DELETE FROM users WHERE login_id = 'tanaka0219';

select * from users;


感情登録

emotions 親テーブル
create table emotions (
    emo_stamp int not null,
    action varchar(100) not null,
    emotion int not null
);

insert into emotions values (2,'今日先生に褒められた',1);
select from emotions;
delete from emotions;


emo_stamp 子テーブル
 create table emo_stamp( id Int auto_increment primary key, name varchar(10) not null);

 insert into emo_stamp(name) values
 ('恐れ'),
 ('悲しみ'),
 ('怒り'),
 ('楽しみ'),
 ('喜び');


  select * from emo_stamp;
  +----+-----------+
| id | name      |
+----+-----------+
|  1 | 恐れ      |
|  2 | 悲しみ    |
|  3 | 怒り      |
|  4 | 楽しみ    |
|  5 | 喜び      |
+----+-----------+


emotion 子テーブル 
create table emotion( id Int auto_increment primary key, 
emo_stamp_id int not null,
name varchar(10) not null,
foreign key (emo_stamp_id) references emo_stamp(id) on delete cascade
);

insert into emotion(emo_stamp_id, name) values
(1, '不安'),
(1, '恐怖'),
(1, '焦り'),
(1, '後悔'),
(2, '切なさ'),
(2, '寂しさ'), 
(2, '絶望'),
(2, '後悔'),
(3, '憤り'),
(3, '嫉妬'),
(3, '不満'),
(3, '嫌悪'),
(4, '満足'),
(4, '幸せ'),
(4, '好き'),
(4, '安心'), 
(4, 'リラックス'),
(5, '満足'),
(5, '幸せ'),
(5, '好き'),
(5, '安心'), 
(5, 'リラックス'),
(5, '元気');

select * from emotion;
+----+--------------+-----------------+
| id | emo_stamp_id | name            |
+----+--------------+-----------------+
|  1 |            1 | 不安            |
|  2 |            1 | 恐怖            |
|  3 |            1 | 焦り            |
|  4 |            1 | 後悔            |
|  5 |            2 | 切なさ          |
|  6 |            2 | 寂しさ          |
|  7 |            2 | 絶望            |
|  8 |            2 | 後悔            |
|  9 |            3 | 憤り            |
| 10 |            3 | 嫉妬            |
| 11 |            3 | 不満            |
| 12 |            3 | 嫌悪            |
| 13 |            4 | 満足            |
| 14 |            4 | 幸せ            |
| 15 |            4 | 好き            |
| 16 |            4 | 安心            |
| 17 |            4 | リラックス      |
| 18 |            4 | 元気            |
| 19 |            5 | 満足            |
| 20 |            5 | 幸せ            |
| 21 |            5 | 好き            |
| 22 |            5 | 安心            |
| 23 |            5 | リラックス      |
| 24 |            5 | 元気            |
+----+--------------+-----------------+
Select name from emotion where emo_stamp_id =5;

feedbacks　テーブル 
create table feedbacks(
    id int auto_increment primary key,
    emotion_id int not null,
    feedbacks varchar(100) not null,
    judge int not null,
    foreign key(emotion_id) references emotion(id) on delete cascade
);

insert into feedbacks (emotion_id, feedbacks) values
(1, '教えてくれてありがとう。焦らなくても大丈夫、危機管理能力が長けているね！好きな音楽を聴いてリラックスしてね。'),
(1, '大丈夫だよ。焦らなくても進んでるよ、周りを見られて優秀！今日は散歩して帰ろう。'),
(1, 'お疲れ様。焦らなくても大丈夫、先まで考えられてえらい！今日はゆっくりお風呂に入ろう。');

Select * from feedbacks;
//emotion_id からランダムで FB 表示
Select feedbacks from feedbacks where emotion_id = 10 order by rand() limit 1;

//インナージョイン emo_stamp_id, emotion_id, emotion_name, action, feedbacks を表示
SELECT
e.emo_stamp_id,
e.id AS emotion_id,
e.name AS emotion_name,
em.action,
f.feedbacks
FROM feedbacks f
JOIN emotion e ON f.emotion_id = e.id
JOIN emotions em ON e.emo_stamp_id = em.emo_stamp
WHERE e.id = 24
ORDER by rand() limit 1;
| emo_stamp_id | emotion_id | emotion_name | action | feedbacks |
| 1 | 1 | 不安 | 友人がどんどん昇級していく | 大丈夫だよ。焦らなくても進んでるよ、周りを見られて優秀！今日は散歩して帰ろう。



stamps　テーブル
create table stamps (
    weekstamps int not null,
    created_at datetime not null default current_timestamp
);

//INSERT 文
INSERT INTO stamps (weekstamps) VALUES (5);

//直近 7 日間のスタンプ件数と合計点数
SELECT COUNT(*) AS count, SUM(weekstamps) AS totalScore FROM stamps WHERE created_at >= NOW() - INTERVAL 7 DAY;
+----------+ | COUNT(1) | +----------+ | 0 | +----------+

//オブジェクト表示、一週間分のデータを自動削除
CREATE EVENT IF NOT EXISTS delete_old_stamps ON SCHEDULE EVERY 1 WEEK DO DELETE FROM stamps WHERE created_at < NOW() - INTERVAL 7 DAY;

//↓MySQL でイベント使うとき、 EVENT_SCHEDULER を ON にしておく必要がある
SET GLOBAL event_scheduler = ON;

//↓そもそも ON になっているか確認する文
SHOW VARIABLES LIKE 'event_scheduler'; //| event_scheduler | ON |になってれば〇

allList　テーブル
create table allList (
    id int auto_increment primary key, 
    emo_stamp_id int not null, 
    action varchar(100) not null,
    emotion_id int not null,
    feedbacks_id int not null,
    created_at datetime not null,
    plant varchar(100) not null,
    foreign key (emo_stamp_id)references emo_stamp(id) on delete cascade,
    foreign key (emotion_id)references emotion(id) on delete cascade,
    foreign key (feedbacks_id)references feedbacks(id) on delete cascade
);

INSERT INTO allList(
emo_stamp_id, action, emotion_id, feedbacks_id, created_at, plant) VALUES(4, '今日先生に褒められた', 4, 1, '2025-06-08 17:00:00', 'URL');

全体の表示(最新の 1 か月) 
SELECT emo_stamp_id, action, emotion_id, feedbacks_id, created_at from allList WHERE
created_at >= DATE_FORMAT(CURDATE(), '%Y-%m-01') AND created_at <
DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), '%Y-%m-01');

全体の表示(過去) 
SELECT emo_stamp_id, action, emotion_id, feedbacks_id, created_at from allList WHERE
created_at >= ? AND created_at < ?;
※?に入るのは選択された日の月の頭と選択された日の翌月の頭の日(2025/3/4 が選択された場合、範囲
は 2025/3/1～2025/4/1 まで)サーブレット内で絞る範囲(始めと終わり)を計算して、その情報を引数と
して DAO に渡す。

日付の期間の表示(例：2025/06/09 ～ 2025/06/15 みたいな表示)
SELECT DATE_SUB(DATE(created_at), INTERVAL WEEKDAY(created_at) DAY) AS week_monday,
DATE_ADD(DATE_SUB(DATE(created_at), INTERVAL WEEKDAY(created_at) DAY), INTERVAL 6 DAY)
AS week_sunday from allList WHERE created_at >= ? AND created_at < ? GROUP BY
week_monday, week_sunday ORDER BY week_monday;
※最初の長い分で月曜日の日と日曜日の日を見つけている

植物の配置 
SELECT plant FROM allList where created_at = DATE_ADD(DATE_SUB(DATE(created_at),
INTERVAL WEEKDAY(created_at) DAY), INTERVAL 6 DAY);

ホーム(カレンダーにスタンプ配置)
SELECT emo_stamp_id from allList WHERE created_at >= ? AND created_at < ?;
※?部分に表示されている月の範囲が来る想定



explanation テーブル
create table explanation (
    title varchar(15) not null,
    content varchar(150) not null
);

insert into explanation (title, content) values
('アプリについて', 'このアプリは自分のメンタル状況を確認し、マインドをネガティブからポジティブにシフトすることを助けます。1日1回、毎日登録することで、ホームページの植物が育ちます。開花を目指して継続しましょう！'),
('ホーム', '1日1回感情登録すると、育てた植物と今月のカレンダー、今月のスタンプの集計が表示されます。カレンダーの日付をクリックすると、一覧表示ページのクリックした日付に移動します。'),
('植物', '"1週間のうちに登録した回数によって植物の育ち方が変わります。
また、1週間毎日登録した場合、感情スタンプの種類によって開花する植物の種類が変わります。7種類あります。"'),
('感情登録', '感情登録ページから感情スタンプ、出来事、どのような気持ちだったかの3つ全てを入力して登録してください。登録された内容に基づいたフィードバックがあります。'),
('記録一覧', '今までに登録した感情スタンプ、出来事、気持ち、フィードバック、育てた植物を一覧で確認することができます。'),
('アカウント', 'ログアウトとアカウント削除ができます。');

select * from explanation;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| title                 | content                                                                                                                                                                                                                                                                                      |
+-----------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| アプリについて        | このアプリは自分のメンタル状況を確認し、マインドをネガティブからポジティブにシフトすることを助けます。1日1回、毎日登録することで、ホームページの植物が育ちます。開花を目指して継続しましょう！                                                                                               |
| ホーム                | 1日1回感情登録すると、育てた植物と今月のカレンダー、今月のスタンプの集計が表示されます。カレンダーの日付をクリックすると、一覧表示ページのクリックした日付に移動します。                                                                                                                     |
| 植物                  | "1週間のうちに登録した回数によって植物の育ち方が変わります。
また、1週間毎日登録した場合、感情スタンプの種類によって開花する植物の種類が変わります。7種類あります。"                                                                                                                         |
| 感情登録              | 感情登録ページから感情スタンプ、出来事、どのような気持ちだったかの3つ全てを入力して登録してください。登録された内容に基づいたフィードバックがあります。                                                                                                                                      |
| 記録一覧              | 今までに登録した感情スタンプ、出来事、気持ち、フィードバック、育てた植物を一覧で確認することができます。                                                                                                                                                                                     |
| アカウント            | ログアウトとアカウント削除ができます。                                                                                                                                                                                                                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

